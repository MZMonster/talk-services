// Generated by CoffeeScript 1.10.0
(function() {
  var Promise, _receiveWebhook, marked, util;

  Promise = require('bluebird');

  marked = require('marked');

  util = require('../util');


  /**
   * Define handler when receive incoming webhook from jenkins
   * @param  {Object}   req      Express request object
   * @param  {Object}   res      Express response object
   * @param  {Function} callback
   * @return {Promise}
   */

  _receiveWebhook = function(arg) {
    var attachment, author, authorName, body, build, commitUrl, message, projectName, projectUrl, status;
    body = arg.body;
    build = body != null ? body.build : void 0;
    if (!build) {
      return;
    }
    message = {};
    attachment = {
      category: 'quote',
      data: {}
    };
    projectName = build.project_name ? "[" + build.project_name + "] " : '';
    projectUrl = build.build_url;
    author = build.committer;
    authorName = author ? author + " " : '';
    commitUrl = build.commit_url;
    status = build.status;
    switch (status) {
      case 'testing':
        attachment.data.title = projectName + "new commits on testing stage";
        break;
      case 'success':
        attachment.data.title = projectName + "new commits on success stage";
        break;
      default:
        return false;
    }
    attachment.data.text = "<a href=\"" + commitUrl + "\" target=\"_blank\"><code>" + build.commit_id.slice(0, 6) + ":</code></a> " + build.message + "<br>";
    attachment.data.redirectUrl = projectUrl;
    message.attachments = [attachment];
    return message;
  };

  module.exports = function() {
    this.title = 'codeship';
    this.template = 'webhook';
    this.summary = util.i18n({
      zh: '持续集成与部署平台',
      en: 'Codeship is a fast and secure hosted Continuous Delivery platform that scales with your needs.'
    });
    this.description = util.i18n({
      zh: 'Codeship 是一个持续集成与部署平台，为你的代码提供一站式测试部署服务',
      en: 'Codeship is a fast and secure hosted Continuous Delivery platform that scales with your needs.'
    });
    this.iconUrl = util["static"]('images/icons/codeship@2x.png');
    this._fields.push({
      key: 'webhookUrl',
      type: 'text',
      readOnly: true,
      description: util.i18n({
        zh: '复制 web hook 地址到你的 Codeship 当中使用。',
        en: 'Copy this web hook to your Codeship server to use it.'
      })
    });
    return this.registerEvent('service.webhook', _receiveWebhook);
  };

}).call(this);
