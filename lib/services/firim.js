// Generated by CoffeeScript 1.10.0
(function() {
  var _receiveWebhook, util;

  util = require('../util');

  _receiveWebhook = function(arg) {
    var body, integration, message, payload, ref, text, title;
    integration = arg.integration, body = arg.body;
    payload = body;
    if (!payload.msg) {
      return;
    }
    title = "fir.im: " + payload.msg;
    text = "";
    if (payload.build) {
      text += "BUILD " + payload.build + "\n";
    }
    if (payload.platform) {
      text += "PLATFORM " + payload.platform + "\n";
    }
    if ((ref = payload.changelog) != null ? ref.length : void 0) {
      text += "CHANGELOG\n" + payload.changelog;
    }
    message = {
      attachments: [
        {
          category: 'quote',
          data: {
            title: title,
            text: text,
            redirectUrl: payload.link,
            userAvatarUrl: payload.icon,
            imageUrl: 'https://tools.teambition.net/qr.png?text=' + encodeURIComponent(payload.link)
          }
        }
      ]
    };
    return message;
  };

  module.exports = function() {
    this.title = 'fir.im';
    this.template = 'webhook';
    this.summary = util.i18n({
      zh: 'App 免费内测托管平台。',
      en: 'fir.im is a beta testing platform that distribute beta versions of your apps and get feedback from users.'
    });
    this.description = util.i18n({
      zh: 'fir.im 是一个 app 免费内测托管平台。为某个话题添加 fir.im 聚合后，你就能够在简聊上收取与绑定应用相关的系统消息。',
      en: 'fir.im is a beta testing platform that distribute beta versions of your apps and get feedback from users. This integration allows you receive notifications from fir.im.'
    });
    this.iconUrl = util["static"]('images/icons/firim@2x.png');
    this._fields.push({
      key: 'webhookUrl',
      type: 'text',
      readonly: true,
      description: util.i18n({
        zh: '复制 web hook 地址到你的 fir.im 的配置当中使用。你也可以在管理界面当中找到这个 web hook 地址。',
        en: 'Copy this web hook to your fir.im account to use it. You may also find this url in the manager tab.'
      })
    });
    return this.registerEvent('service.webhook', _receiveWebhook);
  };

}).call(this);
