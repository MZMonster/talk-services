// Generated by CoffeeScript 1.10.0
(function() {
  var _receiveWebhook, util;

  util = require('../util');

  _receiveWebhook = function(arg) {
    var body, build, headers, integration, message, payload, project, ref, ref1, title;
    integration = arg.integration, body = arg.body, headers = arg.headers;
    payload = body || {};
    build = payload.build || {};
    project = payload.project || {};
    if (!(build.state && project.name)) {
      return;
    }
    if (integration.token && headers["X-Buildkite-Token"] !== integration.token) {
      throw new Error('Invalid token');
    }
    title = ("[" + build.state + "] ") + (project.name + " #" + build.number + " ") + ("(" + build.branch + " - " + ((ref = build.commit) != null ? ref.slice(0, 7) : void 0) + ") by " + ((ref1 = payload.sender) != null ? ref1.name : void 0));
    message = {
      attachments: [
        {
          category: 'quote',
          data: {
            title: title,
            text: build.message,
            redirectUrl: build.web_url
          }
        }
      ]
    };
    return message;
  };

  module.exports = function() {
    this.title = 'Buildkite';
    this.template = 'webhook';
    this.summary = util.i18n({
      zh: '持续集成服务',
      en: 'A continuous integration service.'
    });
    this.description = util.i18n({
      zh: 'Buildkite 是一个在线的持续集成服务，用来构建及测试你的代码。',
      en: 'Buildkite is a continuous integration service.'
    });
    this.iconUrl = util["static"]('images/icons/buildkite@2x.png');
    this._fields.push({
      key: 'token',
      type: 'text',
      description: util.i18n({
        zh: '可选',
        en: 'Optional'
      })
    });
    this._fields.push({
      key: 'webhookUrl',
      type: 'text',
      readonly: true,
      description: util.i18n({
        zh: '复制 web hook 地址到 buildkite.com 中使用',
        en: 'Copy this web hook to your buildkite.com to use it.'
      })
    });
    return this.registerEvent('service.webhook', _receiveWebhook);
  };

}).call(this);
